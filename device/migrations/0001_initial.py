# Generated by Django 2.1.2 on 2019-01-30 10:39

import device.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('globalconfig', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('provider', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('dev_name', models.CharField(max_length=50, unique=True)),
                ('dev_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('dev_mac', models.CharField(blank=True, max_length=30, null=True)),
                ('dev_ident', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('dev_access_token', models.CharField(default=device.models.generate_access_token, max_length=50, unique=True)),
                ('dev_sessionid', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('dev_system', models.SmallIntegerField(choices=[(0, 'UnKnown'), (1, 'Access Controller'), (2, 'Lift'), (3, 'Car Parking'), (4, 'Lighting'), (5, 'advertis'), (6, 'Fire Escape')], default=0)),
                ('dev_attr', models.SmallIntegerField(choices=[(0, 'All read write'), (1, 'Read only')], default=0)),
                ('dev_type', models.SmallIntegerField(choices=[(0, 'UnKnown'), (1, 'Device'), (2, 'Device Interface'), (3, 'Gateway')], default=0)),
                ('dev_state', models.SmallIntegerField(choices=[(0, 'InActive'), (1, 'Active')], default=0)),
                ('dev_online', models.BooleanField(default=False)),
                ('dev_info', models.CharField(blank=True, max_length=100, null=True)),
                ('create_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='create_device_device_related', to=settings.AUTH_USER_MODEL)),
                ('dev_building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='globalconfig.Building')),
                ('dev_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='device.Device')),
                ('dev_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='provider.Provider')),
                ('dev_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='globalconfig.Zone')),
                ('update_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='update_device_device_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='DeviceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('dle_ident', models.IntegerField(blank=True, null=True)),
                ('create_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='create_device_deviceline_related', to=settings.AUTH_USER_MODEL)),
                ('dle_dev', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deviceline', to='device.Device')),
                ('update_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='update_device_deviceline_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'device_line',
            },
        ),
        migrations.AlterUniqueTogether(
            name='deviceline',
            unique_together={('dle_dev', 'dle_ident')},
        ),
    ]
